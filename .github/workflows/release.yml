name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: Existing tag to build and publish
        required: true
        type: string

jobs:
  build:
    name: Build ${{ matrix.goos }}-${{ matrix.goarch }}
    runs-on: ubuntu-latest
    env:
      BINARY_NAME: schh
      CMD_PATH: ./cmd/schh
      RELEASE_TAG: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag || github.ref_name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - goos: linux
            goarch: amd64
            archive: tar.gz
            ext: ""
          - goos: linux
            goarch: arm64
            archive: tar.gz
            ext: ""
          - goos: darwin
            goarch: amd64
            archive: tar.gz
            ext: ""
          - goos: darwin
            goarch: arm64
            archive: tar.gz
            ext: ""
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag || github.ref }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Download dependencies
        run: go mod download

      - name: Build and package ${{ matrix.goos }}-${{ matrix.goarch }}
        run: |
          mkdir -p dist
          OUTPUT="${BINARY_NAME}${{ matrix.ext }}"
          ARCHIVE="${BINARY_NAME}_${RELEASE_TAG}_${{ matrix.goos }}_${{ matrix.goarch }}"
          CGO_ENABLED=0 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o "dist/${OUTPUT}" "${CMD_PATH}"
          if [ "${{ matrix.archive }}" = "zip" ]; then
            (cd dist && zip "${ARCHIVE}.zip" "${OUTPUT}")
          else
            tar -C dist -czf "dist/${ARCHIVE}.tar.gz" "${OUTPUT}"
          fi
          rm "dist/${OUTPUT}"

      - name: Upload packaged artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BINARY_NAME }}_${{ matrix.goos }}_${{ matrix.goarch }}
          path: dist/${{ env.BINARY_NAME }}_${{ env.RELEASE_TAG }}_${{ matrix.goos }}_${{ matrix.goarch }}.${{ matrix.archive }}
          if-no-files-found: error

  release:
    name: Publish release
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    env:
      RELEASE_TAG: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag || github.ref_name }}
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Flatten artifact directory
        run: |
          find dist -mindepth 1 -maxdepth 1 -type d | while read -r dir; do
            mv "${dir}"/* dist/
            rmdir "${dir}"
          done

      - name: Publish GitHub release
        if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          name: ${{ env.RELEASE_TAG }}
          files: |
            dist/*.tar.gz
          generate_release_notes: true
